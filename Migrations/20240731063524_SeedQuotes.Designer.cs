// <auto-generated />
using System;
using BookQuotesApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookQuotesApi.Migrations
{
    [DbContext(typeof(BookQuotesContext))]
    [Migration("20240731063524_SeedQuotes")]
    partial class SeedQuotes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("BookQuotesApi.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BookQuotesApi.Models.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Quotes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Franklin D. Roosevelt",
                            Text = "The only limit to our realization of tomorrow is our doubts of today."
                        },
                        new
                        {
                            Id = 2,
                            Author = "Martin Luther King Jr.",
                            Text = "In the end, we will remember not the words of our enemies, but the silence of our friends."
                        },
                        new
                        {
                            Id = 3,
                            Author = "Alan Kay",
                            Text = "The best way to predict the future is to invent it."
                        },
                        new
                        {
                            Id = 4,
                            Author = "Charles R. Swindoll",
                            Text = "Life is 10% what happens to us and 90% how we react to it."
                        },
                        new
                        {
                            Id = 5,
                            Author = "Steve Jobs",
                            Text = "The only way to do great work is to love what you do."
                        });
                });

            modelBuilder.Entity("BookQuotesApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "password",
                            Username = "user"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
